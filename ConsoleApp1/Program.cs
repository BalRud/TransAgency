using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Timers;

//  Транспортное агентство
// Разработайте программу, имитирующую работу трансагентства. Трансагентство имеет сеть филиалов в нескольких городах. 
// Транспортировка грузов осуществляется между этими городами тремя видами транспорта: автомобильным, железнодорожным и воздушным.
// Любой вид транспортировки имеет стоимость единицы веса на единицу пути и скорость доставки.
//  -Воздушный транспорт можно использовать только между крупными городами, этот вид самый скоростной и самый дорогой.
//    Кроме того, воздушный транспорт зависит от погоды.
//    Доставить груз воздушным путем можно только при условии хорошей погоды одновременно в городах отправки и назначения. 
//    Хорошая или плохая погода задается случайным образом.
//  -Железнодорожный транспорт можно использовать между крупными и средними городами, этот вид самый дешевый. 
//  -Автомобильный транспорт можно использовать между любыми городами.

// Заказчики через случайные промежутки времени обращаются в один из филиалов трансагентства с заказом на перевозку определенной массы груза 
//    и возможным пожеланием о скорости/цене доставки. Трансагентство организует отправку грузов одним из видов транспорта с учетом пожеланий клиента. 
// Оплату трансагенство получает только после успешной доставки груза. 
// Между некоторыми городами для железнодорожного и/или автомобильного транспорта имеются скоростные магистрали, 
//   на которых скорость соответствующего вида транспорта увеличивается с заданным коэффициентом. 
// При перевозке грузов могут происходить аварии, при этом вероятность аварии на автотранспорте больше, чем на железнодорожном транспорте,
//  а авиатранспорт имеет аварийность очень низкую. На скоростных магистралях вероятность аварии меньше, чем на обычных дорогах. 
// При аварии трансагентство возвращает заказчику двойную стоимость перевозки.

// Процесс имитации может быть остановлен пользователем программы для просмотра параметров объектов:
//  Доход трансагенства, в том числе с разбивкой по видам транспорта и городам.
//  Среднее время доставки груза, в том числе с разбивкой по видам транспорта и городам.
//  Потери, связанные с плохой погодой.
//  Потери, связанные с аварийностью, в том числе с разбивкой по видам транспорта и по видам дорог.
//  Доход на тонно-километр скоростных магистралей в сравнении с таким же доход на обычных дорогах.
//  Список исполняемых заказов с возможность сортировки по городам, видам транспорта, стоимости перевозки.
//  Список задерживаемых заказов в связи с плохой погодой.
// (Разработать и реализовать классы, которые являются основными в задании.
//    Для сдачи лабораторной работы необходимо создать проект, в котором демонстрируется работа объектов созданных классов.
//    Должны быть продемонстрированы выполнение конструктора, всех доступных методов и деструктора.)

namespace ConsoleApp1
{

    class Simulation
    {
        public static TransAgency Agency;
        static Timer myTimer1;                                                  // Таймер обращений клиента с заказом
        static Timer myTimer2;                                                  // Таймер имиитирующий время доставки (1 тик = 1 час)
        static Random rand = new Random();

        static void Main(string[] args)
        {
            Agency = new TransAgency();                                         // Создание агенства

            SetTimer2();                                                        // Установка второго таймера

            while (true)
            {
                SetTimer();                                                     // Установка первого таймера 


                Console.WriteLine("\nPress the Enter key to stop the simmulation...\n");

                Console.ReadLine();
                myTimer1.Stop();
                myTimer1.Dispose();

                myTimer2.Stop();

                Agency.ShowInfo();                                              // Вывод меню

                Console.ReadLine();
                myTimer2.Start();
            }
        }





        private static void SetTimer()
        {
            myTimer1 = new Timer(1000);

            myTimer1.Elapsed += myTimer1Event;
            myTimer1.AutoReset = true;
            myTimer1.Enabled = true;
        }

        private static void SetTimer2()
        {
            myTimer2 = new Timer(1000);

            myTimer2.Elapsed += myTimer2Event;
            myTimer2.AutoReset = true;
            myTimer2.Enabled = true;
        }

        private static void myTimer1Event(Object source, ElapsedEventArgs e)
        {
            Console.Clear();
            Console.WriteLine($"Количество поступивших заказов: {Agency.OrderCount}");
            myTimer1.Interval = rand.Next(100, 500);
            Agency.CreateRandomOrder();
        }

        private static void myTimer2Event(Object source, ElapsedEventArgs e)
        {
            Agency.DeliveringProcess();
        }
    }
}
